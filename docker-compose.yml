version: '3.9'

services:
  chat-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app
    hostname: chat-app
    restart: unless-stopped
    environment:
      NODE_ENV: 'development'
      NODE_PORT: 3000
      NUM_OF_CLUSTERS: 1
      HOST: 'http://localhost:3000/'
      REDIS_HOST: 'redis-server'
      REDIS_PORT: '6379'
      REDIS_DB: '0'
      REDIS_USERNAME: ''
      REDIS_PASSWD: 'redis12345'
    volumes:
      - type: bind
        source: .
        target: /home/node/app
      - /home/node/app/node_modules
    depends_on:
      - redis
    networks:
      - chat-app

  redis-server:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    container_name: chat-app_redis-server
    hostname: redis
    restart: unless-stopped
    volumes:
      - type: volume
        source: redis-data
        target: /data
    networks:
      - chat-app

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: chat-app_redisinsight
    hostname: redisinsight
    restart: unless-stopped
    ports:
      - '8001:8001'
    volumes:
      - type: volume
        source: redisinsight-data
        target: /db
    networks:
      - chat-app

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: chat-app_nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
      CHAT_SERVER_HOST: chat-app
      CHAT_SERVER_PORT: 3000
    volumes:
      - type: bind
        source: ./logs/nginx
        target: /var/log/nginx
    depends_on:
      - chat-app
    networks:
      - chat-app

volumes:
  redis-data:
    name: chat-app_redis-data

  redisinsight-data:
    name: chat-app_redisinsight

networks:
  chat-app:
    driver: bridge
