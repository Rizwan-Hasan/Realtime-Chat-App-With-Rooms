version: '3.9'

services:
  chat-app-s1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app-s1
    hostname: chat-app-s1
    restart: unless-stopped
    command: node cluster.js # nodemon cluster.js
    environment:
      NODE_ENV: 'production'
      NODE_PORT: 3000
      NUM_OF_CLUSTERS: 25
      HOST: 'http://localhost:8080/'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      REDIS_FAMILY: 4
      REDIS_USERNAME: ''
      REDIS_DB: 0
      REDIS_PASSWD: 'redis12345'
      REDIS_FLUSHALL: 'true'
    # volumes:
    #   - type: bind
    #     source: .
    #     target: /home/node/app
    #   - /home/node/app/node_modules
    depends_on:
      - redis
    networks:
      - realtime-chat-app-with-rooms

  chat-app-s2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app-s2
    hostname: chat-app-s2
    restart: unless-stopped
    command: node cluster.js # nodemon cluster.js
    environment:
      NODE_ENV: 'production'
      NODE_PORT: 3001
      NUM_OF_CLUSTERS: 25
      HOST: 'http://localhost:8080/'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      REDIS_FAMILY: 4
      REDIS_USERNAME: ''
      REDIS_DB: 0
      REDIS_PASSWD: 'redis12345'
      REDIS_FLUSHALL: 'true'
    # volumes:
    #   - type: bind
    #     source: .
    #     target: /home/node/app
    #   - /home/node/app/node_modules
    depends_on:
      - redis
    networks:
      - realtime-chat-app-with-rooms

  haproxy:
    build:
      context: ./docker/haproxy
      dockerfile: Dockerfile
    container_name: chat-app_haproxy
    hostname: chat-app
    restart: unless-stopped
    # ports:
    #   - '8888:3000'
    depends_on:
      - chat-app-s1
      - chat-app-s2
    networks:
      - realtime-chat-app-with-rooms

  redis:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    container_name: chat-app_redis-server
    hostname: redis
    restart: unless-stopped
    networks:
      - realtime-chat-app-with-rooms

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: chat-app_nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
      CHAT_SERVER_HOST: chat-app
      CHAT_SERVER_PORT: 3000
    volumes:
      - type: bind
        source: ./logs/nginx
        target: /var/log/nginx
    networks:
      - realtime-chat-app-with-rooms

networks:
  realtime-chat-app-with-rooms:
    name: realtime-chat-app-with-rooms
    driver: bridge
