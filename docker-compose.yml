version: '3.9'

services:
  chat-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chat-app
    hostname: chat-app
    restart: unless-stopped
    command: node cluster.js
    environment:
      NODE_ENV: 'production'
      NODE_PORT: 3000
      NUM_OF_CLUSTERS: 25
      HOST: 'http://localhost:3000/'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      REDIS_FAMILY: 4
      REDIS_USERNAME: ''
      REDIS_DB: 0
      REDIS_PASSWD: 'redis12345'
      MEMCACHIER_SERVERS: 'memcached:11211'
    # volumes:
    #   - type: bind
    #     source: .
    #     target: /home/node/app
    #   - /home/node/app/node_modules
    depends_on:
      - redis
      - memcached
    networks:
      - chat-app

  redis:
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    container_name: chat-app_redis-server
    hostname: redis
    restart: unless-stopped
    networks:
      - chat-app

  memcached:
    image: memcached:alpine
    container_name: chat-app_memcached
    hostname: memcached
    restart: unless-stopped
    command: memcached --port=11211 --memory-limit=64 --max-item-size=32m
    networks:
      - chat-app

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: chat-app_nginx
    hostname: nginx
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
      CHAT_SERVER_HOST: chat-app
      CHAT_SERVER_PORT: 3000
    volumes:
      - type: bind
        source: ./logs/nginx
        target: /var/log/nginx
    networks:
      - chat-app

networks:
  chat-app:
    driver: bridge
